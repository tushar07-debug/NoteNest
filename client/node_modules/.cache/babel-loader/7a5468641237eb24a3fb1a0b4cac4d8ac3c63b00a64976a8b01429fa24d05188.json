{"ast":null,"code":"var _jsxFileName = \"D:\\\\NoteNest-Project\\\\client\\\\src\\\\components\\\\Cardcall.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport Card from './Card';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Addbooks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cardcall() {\n  _s();\n  const [post, setPost] = useState([]);\n  useEffect(() => {\n    async function handleContent() {\n      try {\n        const result = await axios.get('http://localhost:3001/getbooks');\n        if (result.status === 200) {\n          setPost(result.data);\n        }\n      } catch (err) {\n        alert(err.response.message);\n      }\n    }\n    handleContent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh_100\",\n    style: {\n      marginBottom: '10px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-wrap app ms-sm-auto me-sm-auto\",\n      children: post.map(book => /*#__PURE__*/_jsxDEV(Card, {\n        title: book.title,\n        price: book.price,\n        url_cover: book.url1,\n        url_bg: book.url2,\n        subtitle: book.subtitle,\n        author: book.author,\n        description: book.description,\n        genre: book.genre,\n        id: book._id,\n        flipkart: book.flipkart,\n        amazon: book.amazon,\n        kobo: book.kobo,\n        interview: book.ivq\n      }, book._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Cardcall, \"smerPVHXs5YCTONMUxh6mIGt9XY=\");\n_c = Cardcall;\nexport default Cardcall;\n\n// stripe id : alksyx5u2h@vvatxiy.com\n// cluster id :alksyx5u2h\n// cluster password:aBVKeDU5OyvKJQOr\nvar _c;\n$RefreshReg$(_c, \"Cardcall\");","map":{"version":3,"names":["Card","useEffect","useState","axios","jsxDEV","_jsxDEV","Cardcall","_s","post","setPost","handleContent","result","get","status","data","err","alert","response","message","className","style","marginBottom","children","map","book","title","price","url_cover","url1","url_bg","url2","subtitle","author","description","genre","id","_id","flipkart","amazon","kobo","interview","ivq","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/NoteNest-Project/client/src/components/Cardcall.js"],"sourcesContent":["import '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport Card from './Card';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Addbooks.css'\r\nfunction Cardcall() {\r\n\r\n  const [post,setPost]=useState([])\r\n\r\nuseEffect(()=>{\r\n  async function handleContent(){\r\n    try{\r\n      const result=await axios.get('http://localhost:3001/getbooks');\r\n      if(result.status===200){\r\n        setPost(result.data)\r\n      }\r\n    }\r\n    catch(err){\r\n      alert(err.response.message)\r\n    }\r\n  }\r\n  handleContent();\r\n},[])\r\n\r\n  return (  \r\n    <div className='min-vh_100' style={{marginBottom:'10px'}}>\r\n      {/* <img src={require('./banner.jpg')} className='img-fluid w-100 banner' style={{height:'28rem'}}/> */}\r\n      {/* <h1 className='text-center mt-4 fs-1 fw-bold p-3'>Our Products</h1> */}\r\n    <div className=\"d-flex flex-wrap app ms-sm-auto me-sm-auto\">\r\n      {(post.map((book)=>(\r\n        <Card \r\n        key={book._id}\r\n        title={book.title}\r\n        price={book.price}\r\n        url_cover={book.url1}\r\n        url_bg={book.url2}\r\n        subtitle={book.subtitle}\r\n        author={book.author}\r\n        description={book.description}\r\n        genre={book.genre}\r\n        id={book._id}\r\n        flipkart={book.flipkart}\r\n        amazon={book.amazon}\r\n        kobo={book.kobo}\r\n        interview={book.ivq}\r\n        />\r\n      )))}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cardcall;\r\n\r\n\r\n// stripe id : alksyx5u2h@vvatxiy.com\r\n// cluster id :alksyx5u2h\r\n// cluster password:aBVKeDU5OyvKJQOr"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAO,sCAAsC;AAC7C,OAAO,gCAAgC;AACvC,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EAEnCD,SAAS,CAAC,MAAI;IACZ,eAAeS,aAAaA,CAAA,EAAE;MAC5B,IAAG;QACD,MAAMC,MAAM,GAAC,MAAMR,KAAK,CAACS,GAAG,CAAC,gCAAgC,CAAC;QAC9D,IAAGD,MAAM,CAACE,MAAM,KAAG,GAAG,EAAC;UACrBJ,OAAO,CAACE,MAAM,CAACG,IAAI,CAAC;QACtB;MACF,CAAC,CACD,OAAMC,GAAG,EAAC;QACRC,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACC,OAAO,CAAC;MAC7B;IACF;IACAR,aAAa,CAAC,CAAC;EACjB,CAAC,EAAC,EAAE,CAAC;EAEH,oBACEL,OAAA;IAAKc,SAAS,EAAC,YAAY;IAACC,KAAK,EAAE;MAACC,YAAY,EAAC;IAAM,CAAE;IAAAC,QAAA,eAGzDjB,OAAA;MAAKc,SAAS,EAAC,4CAA4C;MAAAG,QAAA,EACvDd,IAAI,CAACe,GAAG,CAAEC,IAAI,iBACdnB,OAAA,CAACL,IAAI;QAELyB,KAAK,EAAED,IAAI,CAACC,KAAM;QAClBC,KAAK,EAAEF,IAAI,CAACE,KAAM;QAClBC,SAAS,EAAEH,IAAI,CAACI,IAAK;QACrBC,MAAM,EAAEL,IAAI,CAACM,IAAK;QAClBC,QAAQ,EAAEP,IAAI,CAACO,QAAS;QACxBC,MAAM,EAAER,IAAI,CAACQ,MAAO;QACpBC,WAAW,EAAET,IAAI,CAACS,WAAY;QAC9BC,KAAK,EAAEV,IAAI,CAACU,KAAM;QAClBC,EAAE,EAAEX,IAAI,CAACY,GAAI;QACbC,QAAQ,EAAEb,IAAI,CAACa,QAAS;QACxBC,MAAM,EAAEd,IAAI,CAACc,MAAO;QACpBC,IAAI,EAAEf,IAAI,CAACe,IAAK;QAChBC,SAAS,EAAEhB,IAAI,CAACiB;MAAI,GAbfjB,IAAI,CAACY,GAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcZ,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACtC,EAAA,CA7CQD,QAAQ;AAAAwC,EAAA,GAARxC,QAAQ;AA+CjB,eAAeA,QAAQ;;AAGvB;AACA;AACA;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}