{"ast":null,"code":"var _jsxFileName = \"D:\\\\NoteNest-Project\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { Box, TextField, Button, Typography, styled } from '@mui/material';\nimport axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { DataContext } from './DataProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled(Box)`\nmargin:auto;\nmargin-top:64px;\nwidth:400px;\nbox-shadow: 5px 2px 5px 2px rgb(0 0 0/0.6)\n`;\n_c = Container;\nconst Image = styled(\"img\")({\n  width: '100px',\n  padding: '50px 0 0',\n  margin: 'auto',\n  display: 'flex'\n});\n_c2 = Image;\nconst Wrapper = styled(Box)`\ndisplay:flex;\nflex:1;\nflex-direction:column;\npadding:25px 35px;\n&>div, &>button,&>p {\nmargin-top:20px;\n}\n`;\n_c3 = Wrapper;\nconst Text = styled(Typography)`\nmargin:auto;\ncolor:gray;\nfont-size:16px;\n`;\n_c4 = Text;\nconst Loginbtn = styled(Button)`\ntext-transform: none;\nheight:48px;\nborder-radius:2px;\nbackground-color:#5ba4ed;\ncolor:#fff;\n`;\n_c5 = Loginbtn;\nconst Signupbtn = styled(Button)`\ntext-transform : none;\nheight:48px;\nborder-radius:2px;\nbox-shadow:0 2px 4px 0 rgb(0 0 0/20%);\n`;\n_c6 = Signupbtn;\nconst logininitialvalue = {\n  username: '',\n  password: ''\n};\nconst signupinitialvalue = {\n  username: '',\n  password: '',\n  email: ''\n};\nexport default function Login({\n  isUserAuthenticated\n}) {\n  _s();\n  const [account, setAccount] = useState(\"Login\");\n  const navigate = useNavigate();\n  const [login, setLogin] = useState(logininitialvalue);\n  const [signup, setSignup] = useState(signupinitialvalue);\n  const {\n    setAccount1\n  } = useContext(DataContext);\n  useEffect(() => {\n    const check_auth = async () => {\n      try {\n        let token = sessionStorage.getItem('auth_token');\n        let username = sessionStorage.getItem('username');\n        console.log(token, username);\n        if (token != \"\" && username != \"\") {\n          let response = await axios.post('http://localhost:3001/checkauth', {\n            token\n          });\n          if (response.status === 200) {\n            console.log(response.data);\n            if (response.data == username) {\n              isUserAuthenticated(true);\n              navigate('/');\n            }\n          }\n        }\n      } catch (err) {\n        if (err.message) {\n          toast.error(err.message);\n        } else {\n          toast.error(err.data);\n        }\n      }\n    };\n    check_auth();\n  }, [navigate, isUserAuthenticated]);\n  const handleChange = e => {\n    if (account === 'Login') {\n      setLogin({\n        ...login,\n        [e.target.name]: e.target.value\n      });\n    } else {\n      setSignup({\n        ...signup,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n  const Loginfunc = async () => {\n    try {\n      if (login.username !== \"\" && login.password !== \"\") {\n        let response = await axios.post('http://localhost:3001/login', login);\n        if (response.status === 200) {\n          sessionStorage.setItem('auth_token', response.data['token']);\n          sessionStorage.setItem('username', response.data.username);\n          sessionStorage.setItem('email', response.data.email);\n          toast.success('Login Successfull');\n          isUserAuthenticated(true);\n          setLogin(logininitialvalue);\n          navigate('/', {\n            state: {\n              email: response.data.email,\n              username: response.data.username\n            }\n          });\n        }\n      } else {\n        toast.warning('Fields Cannot Be Empty');\n      }\n    } catch (err) {\n      if (err.message) {\n        toast.error(\"\" + err.message);\n      } else {\n        toast.error(err.data);\n      }\n    }\n  };\n  const Signupfunc = async () => {\n    try {\n      if (signup.email !== \"\" && signup.username !== \"\" && signup.password !== \"\") {\n        let response = await axios.post('http://localhost:3001/signup', signup);\n        if (response.status === 200) {\n          if (response.data === \"Data Saved Successfully\") {\n            toast.success(\"Data Saved Successfully\");\n          } else {\n            toast.info(response.data);\n          }\n          setSignup(signupinitialvalue);\n          setAccount('Login');\n        }\n      } else {\n        toast.warning(\"Fields Cannot be empty\");\n      }\n    } catch (err) {\n      if (err.message) {\n        toast.error(\"\" + err.message);\n      } else {\n        toast.error(err.data);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: \"https://cdn-icons-png.flaticon.com/128/5900/5900097.png\",\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), account === 'Login' ? /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"standard\",\n          name: \"username\",\n          onChange: handleChange,\n          value: login.username,\n          label: \"Enter Username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"standard\",\n          name: \"password\",\n          onChange: handleChange,\n          value: login.password,\n          label: \"Enter Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Loginbtn, {\n          variant: \"contained\",\n          onClick: Loginfunc,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Signupbtn, {\n          variant: \"text\",\n          onClick: () => {\n            setAccount('Signup');\n          },\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"standard\",\n          name: \"email\",\n          label: \"Enter Email\",\n          value: signup.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"standard\",\n          name: \"username\",\n          label: \"Enter Username\",\n          value: signup.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"standard\",\n          name: \"password\",\n          label: \"Enter Password\",\n          value: signup.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Signupbtn, {\n          variant: \"text\",\n          onClick: Signupfunc,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Loginbtn, {\n          variant: \"contained\",\n          onClick: () => {\n            setAccount('Login');\n          },\n          children: \"Already have an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"T/R/7SjNybLyTPkbyQbxZ/zRtr4=\", false, function () {\n  return [useNavigate];\n});\n_c7 = Login;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"Text\");\n$RefreshReg$(_c5, \"Loginbtn\");\n$RefreshReg$(_c6, \"Signupbtn\");\n$RefreshReg$(_c7, \"Login\");","map":{"version":3,"names":["Box","TextField","Button","Typography","styled","axios","useContext","useEffect","useState","useNavigate","useParams","ToastContainer","toast","DataContext","jsxDEV","_jsxDEV","Container","_c","Image","width","padding","margin","display","_c2","Wrapper","_c3","Text","_c4","Loginbtn","_c5","Signupbtn","_c6","logininitialvalue","username","password","signupinitialvalue","email","Login","isUserAuthenticated","_s","account","setAccount","navigate","login","setLogin","signup","setSignup","setAccount1","check_auth","token","sessionStorage","getItem","console","log","response","post","status","data","err","message","error","handleChange","e","target","name","value","Loginfunc","setItem","success","state","warning","Signupfunc","info","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","variant","onChange","label","required","onClick","_c7","$RefreshReg$"],"sources":["D:/NoteNest-Project/client/src/components/Login.js"],"sourcesContent":["import { Box, TextField, Button, Typography, styled } from '@mui/material'\r\nimport axios from 'axios'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport { DataContext } from './DataProvider'\r\n\r\nconst Container = styled(Box)`\r\nmargin:auto;\r\nmargin-top:64px;\r\nwidth:400px;\r\nbox-shadow: 5px 2px 5px 2px rgb(0 0 0/0.6)\r\n`\r\n\r\nconst Image = styled(\"img\")({\r\n    width: '100px',\r\n    padding: '50px 0 0',\r\n    margin: 'auto',\r\n    display: 'flex',\r\n})\r\n\r\nconst Wrapper = styled(Box)`\r\ndisplay:flex;\r\nflex:1;\r\nflex-direction:column;\r\npadding:25px 35px;\r\n&>div, &>button,&>p {\r\nmargin-top:20px;\r\n}\r\n`\r\nconst Text = styled(Typography)`\r\nmargin:auto;\r\ncolor:gray;\r\nfont-size:16px;\r\n`\r\n\r\nconst Loginbtn = styled(Button)`\r\ntext-transform: none;\r\nheight:48px;\r\nborder-radius:2px;\r\nbackground-color:#5ba4ed;\r\ncolor:#fff;\r\n`\r\n\r\nconst Signupbtn = styled(Button)`\r\ntext-transform : none;\r\nheight:48px;\r\nborder-radius:2px;\r\nbox-shadow:0 2px 4px 0 rgb(0 0 0/20%);\r\n`\r\nconst logininitialvalue = {\r\n    username: '',\r\n    password: '',\r\n}\r\n\r\nconst signupinitialvalue = {\r\n    username: '',\r\n    password: '',\r\n    email: ''\r\n}\r\n\r\nexport default function Login({ isUserAuthenticated }) {\r\n    const [account, setAccount] = useState(\"Login\");\r\n    const navigate = useNavigate();\r\n    const [login, setLogin] = useState(logininitialvalue);\r\n    const [signup, setSignup] = useState(signupinitialvalue);\r\n    const {setAccount1}=useContext(DataContext);\r\n\r\n\r\n    useEffect(() => {\r\n        const check_auth = async () => {\r\n            try {\r\n                let token = sessionStorage.getItem('auth_token');\r\n                let username = sessionStorage.getItem('username');\r\n                console.log(token,username)\r\n                if(token!=\"\" && username!=\"\"){\r\n                    let response = await axios.post('http://localhost:3001/checkauth',{token})\r\n                    if(response.status===200){\r\n                        console.log(response.data)\r\n                        if(response.data==username){\r\n                        isUserAuthenticated(true);\r\n                        navigate('/');\r\n                    }\r\n                    }\r\n                }\r\n                \r\n            }\r\n            catch (err) {\r\n                if (err.message) {\r\n                    toast.error(err.message)\r\n                }\r\n                else {\r\n                    toast.error(err.data)\r\n                }\r\n            }\r\n        }\r\n        check_auth();\r\n    }, [navigate, isUserAuthenticated])\r\n\r\n    const handleChange = (e) => {\r\n        if (account === 'Login') {\r\n            setLogin({ ...login, [e.target.name]: e.target.value })\r\n        }\r\n        else {\r\n            setSignup({ ...signup, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    const Loginfunc = async () => {\r\n        try {\r\n            if (login.username !== \"\" && login.password !== \"\") {\r\n                let response = await axios.post('http://localhost:3001/login', login);\r\n                if (response.status === 200) {\r\n                    sessionStorage.setItem('auth_token', response.data['token']);\r\n                    sessionStorage.setItem('username', response.data.username)\r\n                    sessionStorage.setItem('email', response.data.email)\r\n                    toast.success('Login Successfull');\r\n                    isUserAuthenticated(true);\r\n                    setLogin(logininitialvalue);\r\n                    navigate('/',{state:{email:response.data.email,username:response.data.username}});\r\n                }\r\n            }\r\n            else {\r\n                toast.warning('Fields Cannot Be Empty');\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err.message) {\r\n                toast.error(\"\" + err.message);\r\n            }\r\n            else {\r\n                toast.error(err.data);\r\n            }\r\n        }\r\n    }\r\n\r\n    const Signupfunc = async () => {\r\n        try {\r\n            if (signup.email !== \"\" && signup.username !== \"\" && signup.password !== \"\") {\r\n                let response = await axios.post('http://localhost:3001/signup', signup);\r\n                if (response.status === 200) {\r\n                    if(response.data===\"Data Saved Successfully\"){\r\n                        toast.success(\"Data Saved Successfully\");\r\n                    }\r\n                    else{\r\n                        toast.info(response.data);\r\n                    }\r\n                    setSignup\r\n                        (signupinitialvalue);\r\n                    setAccount('Login')\r\n                }\r\n            }\r\n            else {\r\n                toast.warning(\"Fields Cannot be empty\")\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err.message) {\r\n                toast.error(\"\" + err.message);\r\n            }\r\n            else {\r\n                toast.error(err.data);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <ToastContainer />\r\n            <Box>\r\n\r\n                <Image src=\"https://cdn-icons-png.flaticon.com/128/5900/5900097.png\" alt='Logo' />\r\n                {account === 'Login' ?\r\n                    <Wrapper>\r\n                        <TextField variant=\"standard\"\r\n                            name='username'\r\n                            onChange={handleChange}\r\n                            value={login.username}\r\n                            label=\"Enter Username\"\r\n                            required\r\n                        />\r\n                        <TextField variant=\"standard\"\r\n                            name='password'\r\n                            onChange={handleChange}\r\n                            value={login.password}\r\n                            label=\"Enter Password\"\r\n                            required\r\n                        />\r\n                        <Loginbtn variant=\"contained\"\r\n                            onClick={Loginfunc}\r\n                        >Login</Loginbtn>\r\n                        <Text>OR</Text>\r\n                        <Signupbtn variant='text' onClick={() => { setAccount('Signup') }}>Create an account</Signupbtn>\r\n                    </Wrapper>\r\n                    :\r\n                    <Wrapper>\r\n                        <TextField variant=\"standard\"\r\n                            name=\"email\"\r\n                            label=\"Enter Email\"\r\n                            value={signup.email}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n\r\n                        <TextField variant=\"standard\"\r\n                            name='username'\r\n                            label=\"Enter Username\"\r\n                            value={signup.username}\r\n                            onChange={handleChange}\r\n                            required />\r\n                        <TextField variant=\"standard\"\r\n                            name='password'\r\n                            label=\"Enter Password\"\r\n                            value={signup.password}\r\n                            onChange={handleChange}\r\n                            required />\r\n                        <Signupbtn variant='text' onClick={Signupfunc}>Signup</Signupbtn>\r\n                        <Text>OR</Text>\r\n                        <Loginbtn variant='contained' onClick={() => { setAccount('Login') }}>Already have an account</Loginbtn>\r\n                    </Wrapper>\r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}