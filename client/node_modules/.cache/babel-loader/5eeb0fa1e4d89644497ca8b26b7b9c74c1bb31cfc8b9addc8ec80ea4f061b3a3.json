{"ast":null,"code":"var _jsxFileName = \"D:\\\\NoteNest-Project\\\\client\\\\src\\\\components\\\\Checkoutform.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = ({\n  price,\n  email,\n  username,\n  title,\n  author,\n  img\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(price);\n  console.log(\"checkout from\", username, email);\n\n  // console.log(account)\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    if (!stripe || !elements) {\n      setLoading(false);\n      return;\n    }\n    const cardElement = elements.getElement(CardElement);\n    try {\n      const {\n        error,\n        paymentMethod\n      } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n        billing_details: {\n          email: sessionStorage.getItem('email'),\n          name: sessionStorage.getItem('username')\n        }\n      }, {\n        amount: amount * 100,\n        // Convert to cents\n        currency: 'inr' // Indian Rupees\n      });\n      if (error) {\n        console.error('Error creating payment method:', error);\n        setError(error.message);\n      } else {\n        console.log('Payment Method created:', paymentMethod);\n        const response = await fetch('http://localhost:3001/api/checkout/submit', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            payment_method_id: paymentMethod.id,\n            amount: amount * 100,\n            email: sessionStorage.getItem('email'),\n            username: sessionStorage.getItem('username'),\n            title: title,\n            author: author,\n            img: img\n          })\n        });\n        if (response.ok) {\n          toast.success('Payment Sucessfull', {\n            position: 'top-right'\n          });\n          if (cardElement) {\n            cardElement.clear();\n          }\n        } else {\n          toast.error('Payment Unsuccessfull');\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Payment failed. Please try again.');\n      toast.error('Payment failed. Please try again.', {\n        position: 'top-right'\n      });\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"p-3\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '600px',\n        margin: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        htmlFor: \"card-element\",\n        className: \"alert alert-primary fs-6\",\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Payment Gateway\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"card-element\",\n        className: \"mt-4\",\n        options: {\n          style: {\n            base: {\n              fontSize: '16px',\n              fontFamily: 'Arial, sans-serif',\n              color: '#424770',\n              '::placeholder': {\n                color: '#aab7c4'\n              }\n            },\n            invalid: {\n              color: '#9e2146'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-4\",\n        type: \"submit\",\n        disabled: !stripe || loading,\n        children: loading ? 'Processing...' : 'Pay Now'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(CheckoutForm, \"jOPYkhLhl4UaS21oydNIzXmQ+F0=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useContext","useEffect","useState","CardElement","useStripe","useElements","ToastContainer","toast","jsxDEV","_jsxDEV","CheckoutForm","price","email","username","title","author","img","_s","stripe","elements","error","setError","loading","setLoading","amount","setAmount","console","log","handleSubmit","event","preventDefault","cardElement","getElement","paymentMethod","createPaymentMethod","type","card","billing_details","sessionStorage","getItem","name","currency","message","response","fetch","method","headers","body","JSON","stringify","payment_method_id","id","ok","success","position","clear","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","htmlFor","textAlign","options","base","fontSize","fontFamily","color","invalid","role","disabled","_c","$RefreshReg$"],"sources":["D:/NoteNest-Project/client/src/components/Checkoutform.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst CheckoutForm = ({ price, email, username,title,author,img}) => {\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [amount, setAmount] = useState(price);\r\n    \r\n    console.log(\"checkout from\", username, email)\r\n\r\n    // console.log(account)\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n\r\n        if (!stripe || !elements) {\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        try {\r\n            const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n                type: 'card',\r\n                card: cardElement,\r\n\r\n                billing_details: {\r\n                    email: sessionStorage.getItem('email'),\r\n                    name: sessionStorage.getItem('username')\r\n                }\r\n            }, {\r\n                amount: amount * 100, // Convert to cents\r\n                currency: 'inr', // Indian Rupees\r\n            }\r\n            );\r\n            if (error) {\r\n                console.error('Error creating payment method:', error);\r\n                setError(error.message);\r\n            } else {\r\n                console.log('Payment Method created:', paymentMethod);\r\n\r\n\r\n                const response = await fetch('http://localhost:3001/api/checkout/submit', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ payment_method_id: paymentMethod.id, amount: amount * 100, email: sessionStorage.getItem('email'), username: sessionStorage.getItem('username'),title:title,author:author,img:img }),\r\n                })\r\n                if (response.ok) {\r\n                    toast.success('Payment Sucessfull', { position: 'top-right' });\r\n                    if (cardElement) {\r\n                        cardElement.clear();\r\n                    }\r\n                }\r\n                else {\r\n                    toast.error('Payment Unsuccessfull');\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setError('Payment failed. Please try again.');\r\n            toast.error('Payment failed. Please try again.', { position: 'top-right' });\r\n        }\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className='p-3'>\r\n            <ToastContainer />\r\n            <div style={{ maxWidth: '600px', margin: 'auto' }}>\r\n                <h1 htmlFor=\"card-element\" className='alert alert-primary fs-6' style={{ textAlign: 'center' }}>\r\n                    Payment Gateway\r\n                </h1>\r\n                <CardElement\r\n                    id=\"card-element\" className='mt-4'\r\n                    options={{\r\n                        style: {\r\n                            base: {\r\n                                fontSize: '16px',\r\n                                fontFamily: 'Arial, sans-serif',\r\n                                color: '#424770',\r\n                                '::placeholder': {\r\n                                    color: '#aab7c4',\r\n                                },\r\n                            },\r\n                            invalid: {\r\n                                color: '#9e2146',\r\n                            },\r\n                        },\r\n                    }}\r\n                />\r\n                {error && (\r\n                    <div className=\"alert alert-danger mt-3\" role=\"alert\">\r\n                        {error}\r\n                    </div>\r\n                )}\r\n                <button\r\n                    className=\"btn btn-primary mt-4\"\r\n                    type=\"submit\"\r\n                    disabled={!stripe || loading}\r\n                >\r\n                    {loading ? 'Processing...' : 'Pay Now'}\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CheckoutForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}